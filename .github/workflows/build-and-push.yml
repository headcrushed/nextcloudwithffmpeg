name: Build and Push Docker Image on Nextcloud Release

on:
  schedule:
    - cron: '0 0 * * *'  # This runs every day; you can adjust the frequency

jobs:
  check-release:
    runs-on: ubuntu-latest

    steps:
    - name: Check latest release of nextcloud/docker
      id: check_release
      run: |
        # Get the latest release tag from the nextcloud/docker GitHub repository
        LATEST_RELEASE=$(curl --silent "https://api.github.com/repos/nextcloud/docker/releases/latest" | jq -r .tag_name)
        echo "Latest release is $LATEST_RELEASE"
        echo "::set-output name=release_tag::$LATEST_RELEASE"

    - name: Compare with previously stored release
      id: compare_release
      run: |
        # Check if the latest release is new (compared to the previous one)
        if [ -f release_tag.txt ]; then
          PREVIOUS_RELEASE=$(cat release_tag.txt)
          if [ "$PREVIOUS_RELEASE" == "${{ steps.check_release.outputs.release_tag }}" ]; then
            echo "No new release detected."
            exit 0  # No new release, exit
          fi
        fi
        echo "${{ steps.check_release.outputs.release_tag }}" > release_tag.txt
        echo "New release detected."

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: /DockerFileFolder  # Path to your Dockerfile folder
        file: /DockerFileFolder/Dockerfile  # Dockerfile location
        push: true  # Push the image to Docker Hub after building
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/nc-with-ffmpeg-im:latest  # Docker Hub repo name and tag
