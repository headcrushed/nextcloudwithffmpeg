name: Build and Push Docker Image

on:
  schedule:
    - cron: '0 * * * *' # This runs the workflow every hour (adjusted from your comment)
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check for new Nextcloud image
        id: check_nextcloud
        run: |
          # Pull the latest Nextcloud image
          docker pull nextcloud:latest
          # Get the image digest
          NEXTCLOUD_IMAGE=$(docker inspect --format='{{index .RepoDigests 0}}' nextcloud:latest)
          echo "NEXTCLOUD_IMAGE=$NEXTCLOUD_IMAGE" >> $GITHUB_ENV

      - name: Load previous digest from cache (if available)
        id: load_digest
        run: |
          echo "Restoring previous digest from cache (if available)"
          # Check if the file exists and read it; otherwise, set to empty string
          if [ -f .nextcloud-digest.txt ]; then
            DIGEST_NEXTCLOUD_CACHE=$(cat .nextcloud-digest.txt)
          else
            DIGEST_NEXTCLOUD_CACHE=""
          fi
          echo "Previous digest: $DIGEST_NEXTCLOUD_CACHE"
          echo "DIGEST_NEXTCLOUD_CACHE=$DIGEST_NEXTCLOUD_CACHE" >> $GITHUB_ENV

      - name: Check for changes
        id: check_changes
        run: |
          # Compare the current digest to the previous one
          if [ "$NEXTCLOUD_IMAGE" != "$DIGEST_NEXTCLOUD_CACHE" ]; then
            echo "New Nextcloud image detected."
            echo "$NEXTCLOUD_IMAGE" > .nextcloud-digest.txt
            echo "new_nextcloud_image=true" >> $GITHUB_ENV
          else
            echo "No new Nextcloud image."
            echo "new_nextcloud_image=false" >> $GITHUB_ENV
          fi

      #- name: Build and push Docker image
      #  if: env.new_nextcloud_image == 'true'
      #  run: |
      #    docker build -t edipdi/nc-with-ffmpeg-im:latest .
      #    docker push edipdi/nc-with-ffmpeg-im:latest

      - name: Cache digest for future runs
        uses: actions/cache@v3
        with:
          path: .nextcloud-digest.txt
          key: nextcloud-digest-${{ runner.os }}
          restore-keys: |
            nextcloud-digest-
